version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: freemarket_db
      POSTGRES_USER: freemarket_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - freemarket
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U freemarket_user -d freemarket_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - freemarket
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      DATABASE_URL: postgresql://freemarket_user:${DB_PASSWORD}@db/freemarket_db
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      REDIS_URL: redis://redis:6379/0
    networks:
      - freemarket
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    networks:
      - freemarket
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - freemarket
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  bot:
    build:
      context: ./backend
      dockerfile: Dockerfile.bot
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DATABASE_URL: postgresql://freemarket_user:${DB_PASSWORD}@db/freemarket_db
    networks:
      - freemarket
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:


networks:
  freemarket:
    driver: bridge
