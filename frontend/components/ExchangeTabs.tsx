/**
 * ExchangeTabs.tsx
 * Main tab container for Permanent and Temporary Exchange
 *
 * Features:
 * - Two-tab UI (Green for Permanent, Orange for Temporary)
 * - Form validation
 * - API integration
 */
import React, { useState } from 'react';
import PermanentTab from './PermanentTab';
import TemporaryTab from './TemporaryTab';
import { apiService } from '../services/api';

// ========== EXPANDED CATEGORY SYSTEM ==========

// üïí TEMPORARY EXCHANGE (—Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º)
export const TEMPORARY_CATEGORIES = [
  {
    group: 'üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å', items: [
      { value: 'bicycle', label: '–í–µ–ª–æ—Å–∏–ø–µ–¥—ã, —Å–∞–º–æ–∫–∞—Ç—ã, –≥–∏—Ä–æ—Å–∫—É—Ç–µ—Ä—ã' },
      { value: 'electric_transport', label: '–≠–ª–µ–∫—Ç—Ä–æ—Å–∞–º–æ–∫–∞—Ç—ã, –º–æ–ø–µ–¥—ã' },
      { value: 'sports_transport', label: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∏ –¥–µ—Ç—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è' }
    ]
  },
  {
    group: 'üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', items: [
      { value: 'hand_tools', label: '–†—É—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' },
      { value: 'power_tools', label: '–≠–ª–µ–∫—Ç—Ä–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' },
      { value: 'industrial_equipment', label: '3D-–ø—Ä–∏–Ω—Ç–µ—Ä—ã, —Å—Ç–∞–Ω–∫–∏, –ø—Ä–æ–µ–∫—Ç–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ' }
    ]
  },
  {
    group: 'üì∑ –§–æ—Ç–æ-, –≤–∏–¥–µ–æ-, –∞—É–¥–∏–æ-—Ç–µ—Ö–Ω–∏–∫–∞', items: [
      { value: 'photo_video', label: '–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç—ã, –æ–±—ä–µ–∫—Ç–∏–≤—ã, –¥—Ä–æ–Ω—ã' },
      { value: 'audio_equipment', label: '–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã, —Ä–µ–∫–æ—Ä–¥–µ—Ä—ã, —Å–≤–µ—Ç' }
    ]
  },
  {
    group: '‚õ∑Ô∏è –°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö', items: [
      { value: 'sports_gear', label: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å (–ª—ã–∂–∏, –ø–∞–ª–∞—Ç–∫–∏, –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã)' },
      { value: 'tourism_camping', label: '–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–±–æ—Ä—ã, –∫–µ–º–ø–∏–Ω–≥' }
    ]
  },
  {
    group: 'üéÆ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ —Ö–æ–±–±–∏', items: [
      { value: 'games_vr', label: '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã, –∫–æ–Ω—Å–æ–ª–∏, VR' },
      { value: 'music_instruments', label: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–µ—Å—Å–∏–π' }
    ]
  },
  {
    group: 'üëó –û–¥–µ–∂–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', items: [
      { value: 'costumes', label: '–ö–æ—Å—Ç—é–º—ã, —Å—Ü–µ–Ω–∏—á–µ—Å–∫–∞—è –æ–¥–µ–∂–¥–∞' },
      { value: 'event_accessories', label: '–£–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã, —Å—É–º–∫–∏ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π' }
    ]
  },
  {
    group: 'üí≥ –¶–∏—Ñ—Ä–æ–≤—ã–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞–∫—Ç–∏–≤—ã', items: [
      { value: 'subscriptions', label: '–ü–æ–¥–ø–∏—Å–∫–∏, –ª–∏—Ü–µ–Ω–∑–∏–∏, —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞' },
      { value: 'temporary_loan', label: '–í—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–π–º (–¥–µ–Ω—å–≥–∏ ‚Üî –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ —Å—Ä–æ–∫)' }
    ]
  },
  {
    group: 'üìö –£—Å–ª—É–≥–∏ –∏ –Ω–∞–≤—ã–∫–∏', items: [
      { value: 'consulting', label: '–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å, —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å—Ç–≤–æ, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è' }
    ]
  }
];

// üí∞ PERMANENT EXCHANGE (–±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞)
export const PERMANENT_CATEGORIES = [
  {
    group: 'üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', items: [
      { value: 'cars', label: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏, –º–æ—Ç–æ—Ü–∏–∫–ª—ã, —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞' }
    ]
  },
  {
    group: 'üè† –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', items: [
      { value: 'real_estate', label: '–ö–≤–∞—Ä—Ç–∏—Ä—ã, –¥–æ–º–∞, —É—á–∞—Å—Ç–∫–∏, –≥–∞—Ä–∞–∂–∏' }
    ]
  },
  {
    group: 'üíª –¢–µ—Ö–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', items: [
      { value: 'electronics', label: '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã, –Ω–æ—É—Ç–±—É–∫–∏, –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞' },
      { value: 'entertainment_tech', label: '–¢–í, –∫–æ–Ω—Å–æ–ª–∏, –≥–∞–¥–∂–µ—Ç—ã' }
    ]
  },
  {
    group: 'üëï –û–¥–µ–∂–¥–∞ –∏ –ª–∏—á–Ω—ã–µ –≤–µ—â–∏', items: [
      { value: 'everyday_clothes', label: '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞, –æ–±—É–≤—å' },
      { value: 'accessories', label: '–õ–∏—á–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã' }
    ]
  },
  {
    group: 'üõãÔ∏è –ü—Ä–µ–¥–º–µ—Ç—ã –±—ã—Ç–∞ –∏ –º–µ–±–µ–ª—å', items: [
      { value: 'kitchen_furniture', label: '–ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, –º–µ–±–µ–ª—å, —Ç–µ–∫—Å—Ç–∏–ª—å' }
    ]
  },
  {
    group: 'üé® –•–æ–±–±–∏ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏', items: [
      { value: 'collectibles', label: '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–∞—Ä—Ç–∏–Ω—ã, –∞–Ω—Ç–∏–∫–≤–∞—Ä–∏–∞—Ç' }
    ]
  },
  {
    group: 'üêæ –ñ–∏–≤–æ–µ –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è', items: [
      { value: 'animals_plants', label: '–î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è (–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å)' }
    ]
  },
  {
    group: 'üí∞ –§–∏–Ω–∞–Ω—Å—ã –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∞–∫—Ç–∏–≤—ã', items: [
      { value: 'money_crypto', label: '–î–µ–Ω—å–≥–∏, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, —Ç–æ–∫–µ–Ω—ã' },
      { value: 'securities', label: '–¶–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏, –¥–æ–ª–∏, –∞–∫—Ç–∏–≤—ã' }
    ]
  }
];

interface UserData {
  name: string;
  telegram: string;
  city: '–ê–ª–º–∞—Ç—ã' | '–ê—Å—Ç–∞–Ω–∞' | '–®—ã–º–∫–µ–Ω—Ç';
}

interface ExchangeTabsProps {
  userId: number;
  onMatchesFound?: (count: number) => void;
}

/**
 * Transform form data to API format
 * Converts frontend form data structure to backend API expected format
 */
const transformFormDataToApiFormat = (
  formData: any,
  exchangeType: 'permanent' | 'temporary',
  userData: UserData
) => {
  const transformItems = (items: Record<string, any[]>) => {
    const result: Record<string, any[]> = {};

    for (const [category, itemList] of Object.entries(items)) {
      if (!Array.isArray(itemList) || itemList.length === 0) {
        continue;
      }

      result[category] = itemList
        .filter(item => item.item_name && item.category && item.value_tenge)
        .map(item => ({
          category: item.category,
          exchange_type: exchangeType,
          item_name: item.item_name.trim(),
          value_tenge: parseInt(item.value_tenge) || 0,
          duration_days: exchangeType === 'temporary'
            ? (parseInt(item.duration_days) || null)
            : null,
          description: (item.description || '').trim()
        }));
    }

    return result;
  };

  return {
    wants: transformItems(formData.wants || {}),
    offers: transformItems(formData.offers || {}),
    locations: [userData.city]
  };
};

export default function ExchangeTabs({ userId, onMatchesFound }: ExchangeTabsProps) {
  const [activeTab, setActiveTab] = useState<'permanent' | 'temporary'>('permanent');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);
  const [userData, setUserData] = useState<UserData>({
    name: '',
    telegram: '',
    city: '–ê–ª–º–∞—Ç—ã'
  });

  const handleUserDataChange = (field: keyof UserData, value: string) => {
    setUserData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleTabChange = (value: string) => {
    setActiveTab(value as 'permanent' | 'temporary');
    setError(null);
    setSuccess(false);
  };

  const handleSubmit = async (data: any) => {
    setLoading(true);
    setError(null);
    setSuccess(false);

    try {
      // Validate user data
      if (!userData.name.trim()) {
        throw new Error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –§–ò–û');
      }
      if (!userData.telegram.trim()) {
        throw new Error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–æ–Ω—Ç–∞–∫—Ç');
      }

      // 1. Transform form data to API format
      const apiData = transformFormDataToApiFormat(data, activeTab, userData);

      // Validate that we have at least some items
      const totalWants = Object.values(apiData.wants).reduce((sum, arr) => sum + arr.length, 0);
      const totalOffers = Object.values(apiData.offers).reduce((sum, arr) => sum + arr.length, 0);

      if (totalWants === 0 && totalOffers === 0) {
        throw new Error('–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª "–•–æ—á—É" –∏–ª–∏ "–ú–æ–≥—É"');
      }

      // 2. Send to backend API
      const response = await apiService.createListing({
        user_id: userId,
        wants: apiData.wants,
        offers: apiData.offers,
        locations: apiData.locations,
        user_data: {
          name: userData.name,
          telegram: userData.telegram,
          city: userData.city
        }
      });

      console.log('Listing created:', response);

      // 3. Automatically trigger matching
      let matchesCount = 0;
      try {
        const matchesResponse = await apiService.findMatches(userId, activeTab);
        matchesCount = matchesResponse.matches_found || matchesResponse.total_matches || 0;
        console.log('Matches found:', matchesCount);
      } catch (matchError) {
        console.warn('Matching failed (listing still created):', matchError);
        // Don't fail the whole operation if matching fails
      }

      // 4. Update UI
      setSuccess(true);
      if (onMatchesFound) {
        onMatchesFound(matchesCount);
      }

      // Clear success message after 5 seconds
      setTimeout(() => setSuccess(false), 5000);

    } catch (err: any) {
      console.error('Failed to submit listing:', err);
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="w-full max-w-6xl mx-auto p-6">
      <div className="border-0 shadow-lg bg-white rounded-lg p-6">
        <div className="pb-3">
          <h1 className="text-3xl font-bold">üéÅ FreeMarket Exchange</h1>
          <p className="text-gray-600 mt-2">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±–º–µ–Ω–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã</p>
        </div>

        {/* User Data Form */}
        <div className="mb-6 p-4 bg-gradient-to-r from-orange-50 to-yellow-50 rounded-lg border-2 border-orange-300">
          <h2 className="text-xl font-bold mb-4 text-orange-800">üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –§–ò–û *
              </label>
              <input
                type="text"
                value={userData.name}
                onChange={(e) => handleUserDataChange('name', e.target.value)}
                placeholder="–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
                required
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –¢–µ–ª–µ–≥—Ä–∞–º –∫–æ–Ω—Ç–∞–∫—Ç *
              </label>
              <input
                type="text"
                value={userData.telegram}
                onChange={(e) => handleUserDataChange('telegram', e.target.value)}
                placeholder="@username –∏–ª–∏ +7..."
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
                required
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –ì–æ—Ä–æ–¥ *
              </label>
              <select
                value={userData.city}
                onChange={(e) => handleUserDataChange('city', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
              >
                <option value="–ê–ª–º–∞—Ç—ã">–ê–ª–º–∞—Ç—ã</option>
                <option value="–ê—Å—Ç–∞–Ω–∞">–ê—Å—Ç–∞–Ω–∞</option>
                <option value="–®—ã–º–∫–µ–Ω—Ç">–®—ã–º–∫–µ–Ω—Ç</option>
              </select>
            </div>
          </div>
        </div>

        <div className="w-full">
          {/* Tab Triggers */}
          <div className="grid w-full grid-cols-2 mb-6 bg-gray-100 p-1 rounded-lg">
            <button
              onClick={() => handleTabChange('permanent')}
              className={`flex items-center gap-2 justify-center py-2 px-4 rounded transition-all ${activeTab === 'permanent' ? 'bg-green-500 text-white' : 'bg-transparent'
                }`}
            >
              <span className="text-2xl">üü¢</span>
              <span className="hidden sm:inline">–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–±–º–µ–Ω</span>
              <span className="sm:hidden">–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π</span>
            </button>

            <button
              onClick={() => handleTabChange('temporary')}
              className={`flex items-center gap-2 justify-center py-2 px-4 rounded transition-all ${activeTab === 'temporary' ? 'bg-orange-500 text-white' : 'bg-transparent'
                }`}
            >
              <span className="text-2xl">üü†</span>
              <span className="hidden sm:inline">–í—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±–º–µ–Ω</span>
              <span className="sm:hidden">–í—Ä–µ–º–µ–Ω–Ω—ã–π</span>
            </button>
          </div>

          {/* Permanent Exchange Tab */}
          {activeTab === 'permanent' && (
            <div className="mt-6">
              <PermanentTab
                userId={userId}
                onSubmit={handleSubmit}
              />
            </div>
          )}

          {/* Temporary Exchange Tab */}
          {activeTab === 'temporary' && (
            <div className="mt-6">
              <TemporaryTab
                userId={userId}
                onSubmit={handleSubmit}
              />
            </div>
          )}
        </div>
      </div>

      {/* Status Messages */}
      {error && (
        <div className="mt-6 p-4 bg-red-50 border-l-4 border-red-500 rounded">
          <p className="text-sm text-red-700">
          ‚ùå <strong>–û—à–∏–±–∫–∞:</strong> {error}
          </p>
        </div>
      )}

      {success && (
        <div className="mt-6 p-4 bg-green-50 border-l-4 border-green-500 rounded">
          <p className="text-sm text-green-700">
          ‚úÖ <strong>–£—Å–ø–µ—à–Ω–æ!</strong> –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è.
          </p>
        </div>
      )}

      {loading && (
        <div className="mt-6 p-4 bg-blue-50 border-l-4 border-blue-500 rounded">
          <p className="text-sm text-blue-700">
          ‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π...
          </p>
        </div>
      )}

      {/* Info Box */}
      <div className="mt-6 p-4 bg-blue-50 border-l-4 border-blue-500 rounded">
        <p className="text-sm text-gray-700">
          üí° <strong>–°–æ–≤–µ—Ç:</strong> –î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –æ–±–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–•–æ—á—É/–ú–æ–≥—É),
          –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–ù–∞–π—Ç–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è" —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞.
        </p>
      </div>
    </div>
  );
}
